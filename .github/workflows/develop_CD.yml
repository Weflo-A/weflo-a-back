name: develop_CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # copy application.yml
      - name: Set up dev ENV
        run: |
          cd ./src/main/resources/
          touch ./application.yml
          echo "$ENV_PROPERTIES_LOCAL" > ./application.yml
        env:
          ENV_PROPERTIES_LOCAL: ${{ secrets.ENV_PROPERTIES_LOCAL }}

      # gradle build
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      ## 도커 이미지 빌드 후 도커허브에 push
      - name: docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
  cd:
    needs: ci
    runs-on: ubuntu-latest

    steps:
      ## deploy.sh 파일 서버로 전달
      - name: Send deploy.sh
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST }}
          key: ${{ secrets.KEY }}
          port: 22
          source: "./deploy.sh"
          target: "/home/ubuntu/"

      ## 도커 허브에서 jar파일 및 pull후에 컴포즈 up
      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.HOST }}
          key: ${{ secrets.KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            chmod 777 ./deploy.sh
            ./deploy.sh
            docker image prune -f
